if ! exists('g:vimified_packages')
  let g:vimified_packages = ['general', 'fancy', 'coding', 'indent', 'ruby', 'rails', 'rspec', 'javascript', 'ctags', 'snippets', 'colour']
endif

:hi TabLineFill term=bold cterm=bold ctermbg=237

"if count(g:vimified_packages, 'colour') || count(g:vimified_packages, 'color')
colorscheme Tomorrow-Night-Eighties
  " colorscheme base16-eighties
"endif

" NerdTree
let NERDTreeHijackNetrw = 0
let g:NERDTreeWinSize = 25
let g:NERDTreeChDirMode = 2
let NERDTreeShowHidden = 1
map \ :NERDTreeToggle<CR>
map \| :NERDTreeFind<CR>

" vim-commentary
xmap <leader>/ <Plug>Commentary
nmap <leader>/ <Plug>CommentaryLine

" ag
function! AgGrep()
  let command = 'ag -i '.expand('<cword>')
  cexpr system(command)
  cw
endfunction

function! AgVisual()
  normal gv"xy
  let command = 'ag -i '.@x
  cexpr system(command)
  cw
endfunction

" tmux stuff
let g:rspec_command = 'call Send_to_Tmux("bundle exec spring rspec {spec}\n")'
" let g:rspec_runner = "os_x_iterm"
" let g:rspec_command = 'bundle exec rspec {spec}'

map <leader>a :call AgGrep()<CR>
vmap <leader>a :call AgVisual()<CR>

" switch syntax highlighting on, when the terminal has colors
if &t_Co > 2 || has('gui_running')
  set hlsearch
endif

" clear the search buffer when hitting space
:nnoremap <ESC><ESC> :nohlsearch<cr>

" copy current file path to system pasteboard
map <silent> <D-C> :let @* = expand("%")<CR>:echo "Copied: ".expand("%")<CR>
map <leader>C :let @* = expand("%").":".line(".")<CR>:echo "Copied: ".expand("%").":".line(".")<CR>

set guifont=Menlo\ Regular:h14
set colorcolumn=80
set nowrap

" autosave
autocmd BufLeave,FocusLost * silent! wall

" remove unwanted whitespaces writing to a file
autocmd BufLeave,FocusLost,BufWritePre * silent! :EraseBadWhitespace

autocmd BufNewFile,BufRead *.ejs set filetype=html

map <D-e> :CtrlPBuffer<CR>

command! Vimrc e ~/.vimrc
command! Vimrclocal e ~/.vimrc.local
